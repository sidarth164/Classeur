# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import classeur_pb2 as classeur__pb2


class clientHandlerStub(object):
  """read the following calls from client's perspective
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CheckAuthentication = channel.unary_unary(
        '/classeur.clientHandler/CheckAuthentication',
        request_serializer=classeur__pb2.UserCredentials.SerializeToString,
        response_deserializer=classeur__pb2.Validity.FromString,
        )
    self.ListFiles = channel.unary_unary(
        '/classeur.clientHandler/ListFiles',
        request_serializer=classeur__pb2.UserToken.SerializeToString,
        response_deserializer=classeur__pb2.FileList.FromString,
        )
    self.UploadFile = channel.stream_unary(
        '/classeur.clientHandler/UploadFile',
        request_serializer=classeur__pb2.FileChunks.SerializeToString,
        response_deserializer=classeur__pb2.Acknowledgement.FromString,
        )
    self.DownloadFile = channel.unary_stream(
        '/classeur.clientHandler/DownloadFile',
        request_serializer=classeur__pb2.FileNumber.SerializeToString,
        response_deserializer=classeur__pb2.FileChunks.FromString,
        )
    self.ReportSize = channel.unary_unary(
        '/classeur.clientHandler/ReportSize',
        request_serializer=classeur__pb2.UserToken.SerializeToString,
        response_deserializer=classeur__pb2.FileSize.FromString,
        )


class clientHandlerServicer(object):
  """read the following calls from client's perspective
  """

  def CheckAuthentication(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListFiles(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UploadFile(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DownloadFile(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReportSize(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_clientHandlerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CheckAuthentication': grpc.unary_unary_rpc_method_handler(
          servicer.CheckAuthentication,
          request_deserializer=classeur__pb2.UserCredentials.FromString,
          response_serializer=classeur__pb2.Validity.SerializeToString,
      ),
      'ListFiles': grpc.unary_unary_rpc_method_handler(
          servicer.ListFiles,
          request_deserializer=classeur__pb2.UserToken.FromString,
          response_serializer=classeur__pb2.FileList.SerializeToString,
      ),
      'UploadFile': grpc.stream_unary_rpc_method_handler(
          servicer.UploadFile,
          request_deserializer=classeur__pb2.FileChunks.FromString,
          response_serializer=classeur__pb2.Acknowledgement.SerializeToString,
      ),
      'DownloadFile': grpc.unary_stream_rpc_method_handler(
          servicer.DownloadFile,
          request_deserializer=classeur__pb2.FileNumber.FromString,
          response_serializer=classeur__pb2.FileChunks.SerializeToString,
      ),
      'ReportSize': grpc.unary_unary_rpc_method_handler(
          servicer.ReportSize,
          request_deserializer=classeur__pb2.UserToken.FromString,
          response_serializer=classeur__pb2.FileSize.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'classeur.clientHandler', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class sNodeHandlerStub(object):
  """read the following calls from sNode's perspective
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendFileChunks = channel.stream_unary(
        '/classeur.sNodeHandler/SendFileChunks',
        request_serializer=classeur__pb2.FileChunks.SerializeToString,
        response_deserializer=classeur__pb2.Acknowledgement.FromString,
        )
    self.ReceiveFileChunks = channel.unary_stream(
        '/classeur.sNodeHandler/ReceiveFileChunks',
        request_serializer=classeur__pb2.ChunkDetails.SerializeToString,
        response_deserializer=classeur__pb2.FileChunks.FromString,
        )
    self.Heartbeat = channel.unary_unary(
        '/classeur.sNodeHandler/Heartbeat',
        request_serializer=classeur__pb2.Request.SerializeToString,
        response_deserializer=classeur__pb2.Response.FromString,
        )


class sNodeHandlerServicer(object):
  """read the following calls from sNode's perspective
  """

  def SendFileChunks(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReceiveFileChunks(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Heartbeat(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_sNodeHandlerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendFileChunks': grpc.stream_unary_rpc_method_handler(
          servicer.SendFileChunks,
          request_deserializer=classeur__pb2.FileChunks.FromString,
          response_serializer=classeur__pb2.Acknowledgement.SerializeToString,
      ),
      'ReceiveFileChunks': grpc.unary_stream_rpc_method_handler(
          servicer.ReceiveFileChunks,
          request_deserializer=classeur__pb2.ChunkDetails.FromString,
          response_serializer=classeur__pb2.FileChunks.SerializeToString,
      ),
      'Heartbeat': grpc.unary_unary_rpc_method_handler(
          servicer.Heartbeat,
          request_deserializer=classeur__pb2.Request.FromString,
          response_serializer=classeur__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'classeur.sNodeHandler', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
