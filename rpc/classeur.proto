syntax = "proto3";

package classeur;

service clientHandler {
//read the following calls from client's perspective

    rpc CheckAuthentication(UserCredentials) returns (Validity) {}

    rpc LogOut(UserToken) returns (Acknowledgement) {}

    rpc ListFiles(UserToken) returns (FileList) {}

    rpc UploadFile(stream FileChunks) returns (Acknowledgement) {}

    rpc DownloadFile(FileName) returns (stream FileChunks) {}

    rpc ReportSize(UserToken) returns (FileSize) {}
}

service sNodeHandler {
//read the following calls from sNode's perspective

    rpc SendFileChunks(stream FileChunks) returns (Acknowledgement) {}

    //rpc Heartbeat (Request) returns (Response) {}

    rpc AddSNode(SNodeDetails) returns (Acknowledgement) {}

    rpc DeleteSNode(SNodeDetails) returns (Acknowledgement) {}

}

message UserCredentials {
    string username = 1;
    string password = 2;
}

message Validity {
    bool vailidity = 1;
}

message UserToken {
    string username = 1;
}

message FileSize {
    int64 size = 1;
}

message FileList {
    string filesOwned = 1;
    int64 filesSizes = 2;
}

message FileChunks {
    string fileName = 1;
    int64 chunkId = 2;
    string chunkData = 3;
    string userName = 4;
}

message ChunkDetails {
    string fileName = 1;
    int64 chunkId = 2;
}

message Acknowledgement {
    bool response = 1;
}

message FileName {
    string fileName = 1;
    string userName = 2;
}

message Request {
    string request = 1;
}

message Response {
    string response = 2;
}

message SNodeDetails {
    string ip = 1;
    int64 port = 2;
    string id = 3;
}